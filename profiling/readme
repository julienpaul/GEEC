
# cProfile
output_file="/home/julienpaul/Code/geec/profiling/prof/test_grav.prof"
#Â python -m cProfile [-o output_file] [-s sort_order] (-m module | myscript.py)
python -m cProfile -o ${output_file} -m geec test

import pstats
from pathlib import Path
sortby = "cumulative"
output_file="/home/julienpaul/Code/geec/profiling/prof/test_grav.prof"
ps = pstats.Stats(output_file).sort_stats(sortby)
ps.print_stats("geec",50)

pstats_file=Path(output_file).with_suffix('.txt')
with open(pstats_file, 'w') as stream:
    stats = pstats.Stats(output_file,stream=stream).sort_stats(sortby)
    stats.print_stats("geec")


# timeit
python -m timeit -n 100 -s 'from typer.testing import CliRunner; from geec.cli import app; runner = CliRunner()'  'result = runner.invoke(app, "test")'

# see also

https://www.toucantoco.com/en/tech-blog/python-performance-optimization
https://www.youtube.com/watch?v=QJwVYlDzAXs
https://web.archive.org/web/20170318204046/http://lanyrd.com/2013/pycon/scdywg/

https://stackoverflow.com/questions/23849097/numpy-np-apply-along-axis-function-speed-up
