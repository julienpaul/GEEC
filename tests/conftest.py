#!/usr/bin/env python3
# conftest.py

# --- import -----------------------------------
# import from standard lib
import numpy as np
import pytest

# import from other lib
# import from my project
np.set_printoptions(precision=20)


class Cube:
    def __init__(self):
        self.density = 1000
        self.Gc = 6.67408e-11
        self.obs = np.array([-1.05, -1.05, 0])
        self.points = [
            (-0.5, -0.5, 0.0),
            (0.5, -0.5, 0.0),
            (0.5, 0.5, 0.0),
            (-0.5, 0.5, 0.0),
            (-0.5, -0.5, -1.0),
            (0.5, -0.5, -1.0),
            (0.5, 0.5, -1.0),
            (-0.5, 0.5, -1.0),
        ]

        # Start, End and Step
        x_start, x_end, x_step = -1.05, 1.05, 0.7
        y_start, y_end, y_step = -1.05, 1.05, 0.7
        z_start, z_end, z_step = 0, 1, 1

        g = np.mgrid[x_start:x_end:x_step, y_start:y_end:y_step, z_start:z_end:z_step]

        self.listobs = np.transpose(g.reshape(len(g), -1))


class CubeExcepted:
    def __init__(self):
        # result of obs
        self.G = np.array(
            [0.00183463065681974, 0.0018346306568197504, -0.0008638357043917455]
        )

        # result of listobs
        self.Glistobs = np.array(
            [
                [0.00183463065681974, 0.0018346306568197504, -0.0008638357043917455],
                [0.003951204725618204, 0.0012532924509543325, -0.0018090104337738755],
                [0.003951204725618195, -0.0012532924509543247, -0.0018090104337738677],
                [0.0018346306568197454, -0.0018346306568197482, -0.0008638357043917366],
                [0.0012532924509543247, 0.003951204725618206, -0.0018090104337738645],
                [0.0057031338926188495, 0.005703133892618858, -0.012920832232783789],
                [0.005703133892618859, -0.005703133892618848, -0.012920832232783782],
                [0.001253292450954325, -0.003951204725618206, -0.0018090104337738608],
                [-0.0012532924509543353, 0.003951204725618195, -0.0018090104337738764],
                [-0.005703133892618846, 0.0057031338926188495, -0.012920832232783792],
                [-0.00570313389261885, -0.005703133892618852, -0.012920832232783782],
                [-0.0012532924509543355, -0.003951204725618209, -0.0018090104337738727],
                [-0.0018346306568197395, 0.0018346306568197447, -0.0008638357043917359],
                [-0.003951204725618201, 0.0012532924509543325, -0.0018090104337738634],
                [-0.003951204725618204, -0.001253292450954331, -0.0018090104337738593],
                [
                    -0.0018346306568197358,
                    -0.0018346306568197456,
                    -0.0008638357043917384,
                ],
            ]
        )

        self.g = [
            [0, 0, 0],
            [0, 0, 0],
            [-0.0009020091985975408, -0.0004640758270369379, 0.0002075280720812311],
            [-0.0009112739142465167, -0.0006494853361845594, 0.0006350149813608834],
            [-0.0004640758270369379, -0.0009020091985975416, 0.00020752807208123194],
            [-0.0006494853361845594, -0.0009112739142465184, 0.0006350149813608827],
            [0.0010151027491997228, 0.0007577783406785823, -0.00019284180066040345],
            [0.001168802691321775, 0.0006283546431418985, -0.00046593369652421057],
            [0.0007577783406785839, 0.0010151027491997228, -0.00019284180066040114],
            [0.0006283546431419009, 0.001168802691321775, -0.00046593369652421057],
            [0.0006916430054476028, 0.0004997935030957185, -0.0006156854084533746],
            [0.0004997935030957096, 0.0006916430054476102, -0.0006156854084533746],
        ]

        self.dp1 = [
            0.0,
            0.0,
            -0.55,
            -0.55,
            -0.55,
            -0.55,
            1.55,
            1.55,
            1.55,
            1.55,
            1.0,
            1.0,
        ]

        self.sign = [
            0.0,
            0.0,
            -1.0,
            -1.0,
            -1.0,
            -1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
        ]
        self.omega = [
            0,
            0,
            0.12642554943546536,
            0.1769356120134118,
            0.12642554943546536,
            0.1769356120134118,
            -0.09812663310653935,
            -0.11298429932899534,
            -0.09812663310653935,
            -0.11298429932899534,
            -0.09225022901334334,
            -0.09225022901334334,
        ]

        self.pqr = [
            [0.11668845742152645, -0.11668845742152667, 0.0],
            [0.22767608713751997, -0.22767608713751974, 0.0],
            [-0.056535697417534725, 0.0, -0.24572925777377574],
            [-0.17299353519637528, 0.0, -0.24825319179068783],
            [0.0, 0.05653569741753495, 0.24572925777377597],
            [0.0, 0.17299353519637506, 0.24825319179068828],
            [0.0, -0.018641380526184248, -0.07325193165959926],
            [0.0, -0.045040272944634974, -0.06074096989391975],
            [0.018641380526184026, 0.0, 0.07325193165959942],
            [0.045040272944634974, 0.0, 0.06074096989391997],
            [-0.07488575250756935, 0.10363121290838628, 0.0],
            [-0.1036312129083874, 0.07488575250756802, 0.0],
        ]

        self.edge_pqr = [
            [
                [0.6502768886521813, -0.6502768886521813, 0.0],
                [0.0, 0.5335884312306546, 0.0],
                [-0.5335884312306548, 0.0, 0.0],
            ],
            [
                [0.0, -0.877952975789701, 0.0],
                [0.8779529757897012, 0.0, 0.0],
                [-0.6502768886521813, 0.6502768886521813, 0.0],
            ],
            [
                [0.0, 0.0, 0.5756880205983905],
                [-0.877952975789701, 0.0, 0.0],
                [0.8214172783721663, 0.0, -0.8214172783721663],
            ],
            [
                [-0.8214172783721663, 0.0, 0.8214172783721663],
                [0.0, 0.0, -1.069670470162854],
                [0.648423743175791, 0.0, 0.0],
            ],
            [
                [0.0, -0.8214172783721663, 0.8214172783721663],
                [0.0, 0.8779529757897012, 0.0],
                [0.0, 0.0, -0.5756880205983903],
            ],
            [
                [0.0, -0.6484237431757912, 0.0],
                [0.0, 0.0, 1.0696704701628545],
                [0.0, 0.8214172783721663, -0.8214172783721663],
            ],
            [
                [0.0, 0.0, 0.4416951190448713],
                [0.0, -0.5335884312306548, 0.0],
                [0.0, 0.5149470507044706, -0.5149470507044706],
            ],
            [
                [0.0, -0.5149470507044706, 0.5149470507044706],
                [0.0, 0.0, -0.5756880205983903],
                [0.0, 0.4699067777598356, 0.0],
            ],
            [
                [-0.5149470507044706, 0.0, 0.5149470507044706],
                [0.5335884312306546, 0.0, 0.0],
                [0.0, 0.0, -0.44169511904487113],
            ],
            [
                [-0.4699067777598356, 0.0, 0.0],
                [0.0, 0.0, 0.5756880205983905],
                [0.5149470507044706, 0.0, -0.5149470507044706],
            ],
            [
                [0.0, -0.4699067777598356, 0.0],
                [-0.6484237431757912, 0.0, 0.0],
                [0.5735379906682219, 0.5735379906682219, 0.0],
            ],
            [
                [-0.573537990668223, -0.573537990668223, 0.0],
                [0.0, 0.648423743175791, 0.0],
                [0.4699067777598356, 0.0, 0.0],
            ],
        ]

        self.simplices = [
            [3, 1, 2],
            [3, 0, 1],
            [5, 1, 0],
            [5, 0, 4],
            [7, 0, 3],
            [7, 4, 0],
            [6, 2, 1],
            [6, 1, 5],
            [6, 3, 2],
            [6, 7, 3],
            [6, 5, 4],
            [6, 4, 7],
        ]

        self.un = [
            [-0.0, -0.0, 1.0],
            [-0.0, -0.0, 1.0],
            [0.0, -1.0, 0.0],
            [-0.0, -1.0, -0.0],
            [-1.0, -0.0, 0.0],
            [-1.0, 0.0, 0.0],
            [1.0, 0.0, -0.0],
            [1.0, -0.0, -0.0],
            [0.0, 1.0, -0.0],
            [0.0, 1.0, 0.0],
            [0.0, -0.0, -1.0],
            [-0.0, -0.0, -1.0],
        ]


@pytest.fixture
def cube():
    return Cube()


@pytest.fixture
def expected():
    return CubeExcepted()
